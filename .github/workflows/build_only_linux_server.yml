name: CI Build Server on Linux

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      commit:
        description: "Git commit, branch, or tag to build"
        required: false
        default: ""

permissions:
  packages: read

jobs:
  build_all:
    strategy:
      matrix:
        builds:
          - [ Server, server, linux ]
    name: ${{ matrix.builds[0] }} (Linux)
    runs-on: ubuntu-24.04
    env:
      PROGRAM: ${{ matrix.builds[1] }}
      PLATFORM: ${{ matrix.builds[2] }}
    steps:
      - name: Checkout
        shell: bash
        run: |
          # Settings
          ROOT=~/b
          ROOT_REPO="$ROOT/$PROGRAM"
          ROOT_DEP="$ROOT/dep"
          JOB_SLOTS=$(nproc --all)
          
          # Share with other steps
          echo "ROOT_REPO=$ROOT_REPO" >> "$GITHUB_ENV"
          echo "ROOT_DEP=$ROOT_DEP" >> "$GITHUB_ENV"
          echo "JOB_SLOTS=$JOB_SLOTS" >> "$GITHUB_ENV"
          
          # Checkout all repos
          mkdir -p "$ROOT_REPO" && cd "$_" || exit 1
          git init .
          git config core.symlinks true
          git remote add origin https://github.com/${{ github.repository }}.git

          # If commit input is provided, use it, else default to the triggering ref
          if [[ -n "${{ github.event.inputs.commit }}" ]]; then
            echo "Checking out user-specified commit: ${{ github.event.inputs.commit }}"
            git fetch --depth=1 origin "${{ github.event.inputs.commit }}"
            git checkout FETCH_HEAD
          elif [[ -n "${{ github.event.pull_request.head.ref }}" ]]; then
            echo "Checking out PR ref: ${{ github.event.pull_request.head.ref }}"
            git fetch --depth=1 origin "${{ github.event.pull_request.head.ref }}"
            git checkout FETCH_HEAD
          else
            echo "Checking out default ref: ${{ github.ref_name }}"
            git fetch --depth=1 origin "${{ github.ref_name }}"
            git checkout FETCH_HEAD
          fi
          
          git submodule update --jobs=$JOB_SLOTS --init --depth=1

      - name: Dependencies
        shell: bash
        run: |
          mkdir -p "$ROOT_DEP" && cd "$_" || exit 1
      
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compile
        shell: bash
        run: |
          cd "$ROOT_REPO"
          BUILD_SCRIPT=".github/workflows/ci/build_$PLATFORM.sh"
          PLATFORM= # clear out, some other scripts consider this variable
          
          chmod +x "$BUILD_SCRIPT"
          "$BUILD_SCRIPT" "$ROOT_DEP" $JOB_SLOTS
